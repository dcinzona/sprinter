
name: PR Checks
run-name: Checks running whenever new PR is created

on:
  pull_request:
    branches:
      - dev
      - main
    paths:
      - "account-hierarchy/**"
      - "sprint-estimator/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the Source code from the latest commit
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Installing NPM so that SFDX can be installed
      - name: Installing NPM
        run: |
          npm install
      
      # Installing SFDX CLI
      - name: Installing SFDX CLI
        run: |
          npm install @salesforce/cli --global

      # Creating new .key for .crt file stored in the Connected App
      - name: Creating .key file
        run: |
          touch server.key
          echo -e "${{ secrets.SF_CICD_SERVERKEY }}" >> server.key
      
      # Authorizing to DevHub
      - name: Authorizing the DevHub
        run: sf org login jwt --json --alias devhub --set-default --set-default-dev-hub --username "${{ secrets.SF_CICD_USERNAME }}" --keyfile server.key --clientid ${{ secrets.SF_CLIENT_SECRET }}
      
      # Creating a Scratch Org using the pull request number
      - name: Creating a Scratch Org
        run: sf org create scratch --target-dev-hub devhub --name build_${{ github.event.pull_request.number }} --definition-file config/project-scratch-def.json --set-default --duration-days 1
      
      # Pushing source to the Scratch Org
      - name: Pushing source and metadata to the Scratch Org
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo 'Installing Account Hierarchy package...'
          sf project deploy start --source-dir account-hierarchy -c --ignore-conflicts -o build_${{ github.event.pull_request.number }}
          echo 'Installing Sprint Estimator package...'
          sf project deploy start --source-dir sprint-estimator -c --ignore-conflicts -o build_${{ github.event.pull_request.number }}

      # Executing all unit tests
      - name: Run unit tests
        run: sf apex run test --wait 30 --test-level RunAllTestsInOrg --code-coverage
        

      - name: Delete Scratch Org
        id: ScratchOrgDelete
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          sf org:delete:scratch -o build_${{ github.event.pull_request.number }} -p
